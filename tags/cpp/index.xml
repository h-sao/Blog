<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cpp on Effectiveさお</title>
    <link>http://h-sao.com/tags/cpp/</link>
    <description>Recent content in Cpp on Effectiveさお</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 27 Mar 2016 20:30:00 +0900</lastBuildDate>
    <atom:link href="http://h-sao.com/tags/cpp/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>[勉強会] ebisu_effective_modern.cpp vol.3やりますよ</title>
      <link>http://h-sao.com/blog/2016/03/27/information-ebisu-cpp-vol3/</link>
      <pubDate>Sun, 27 Mar 2016 20:30:00 +0900</pubDate>
      
      <guid>http://h-sao.com/blog/2016/03/27/information-ebisu-cpp-vol3/</guid>
      <description>

&lt;h2 id=&#34;ebisu-effective-modern-cppって:09f27b4d8c49aabd39d7184e2e33816a&#34;&gt;ebisu_effective_modern.cppって？&lt;/h2&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;http://h-sao.com/pic/Information-ebisu-cpp-vol3_00.png&#34; alt=&#34;&#34; /&gt;

&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;東京の恵比寿でC++について、みんなの意見を聞きながら本を読み進める勉強会を開いています&lt;/p&gt;

&lt;p&gt;昔、大阪でC++の読書会を開催していたのですが、それが結構役に立って面白かったので、東京でも開催してみよう！と思い、始めてみました&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ebisu_effective_modern.cpp vol.3&lt;br /&gt;
2016/3/31 (木) 20:00-21:30 東京恵比寿&lt;br /&gt;
&lt;a href=&#34;http://ebisu-effective-modern-cpp.connpass.com/event/29324/&#34;&gt;http://ebisu-effective-modern-cpp.connpass.com/event/29324/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ちなみに大阪はこちらで絶賛開催中ですよ～！&lt;br /&gt;
大阪C++読書会&lt;br /&gt;
&lt;a href=&#34;http://cpp-osaka.connpass.com/&#34;&gt;http://cpp-osaka.connpass.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ネタが無いと勉強や会話もしずらいので、&lt;br /&gt;
&lt;strong&gt;「Effective Modern C ーC11/14プログラムを進化させる42項目」&lt;/strong&gt; を元に進めています&lt;/p&gt;

&lt;p&gt;今回は、&lt;strong&gt;５章 右辺値参照、ムーブセマンティックス、完全転送&lt;/strong&gt; について…&lt;br /&gt;
前回の vol.2 では、基本的なムーブの動きを簡単に抑えた程度になったので、あまり深いところまでは進めませんでした&lt;br /&gt;
書籍の内容にぐいぐい追いつけるように頑張りますよ～&lt;/p&gt;

&lt;p&gt;興味ある方はどうぞ、お気軽にお越しください(^^)/&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Anonymous Struct of C</title>
      <link>http://h-sao.com/blog/2014/02/24/c-anonymous-struct/</link>
      <pubDate>Mon, 24 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://h-sao.com/blog/2014/02/24/c-anonymous-struct/</guid>
      <description>&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;It is very tedious to think about the name of a struct when you use to struct only once.&lt;br /&gt;
In such a case, Anonymous structure comes in handy.&lt;/p&gt;

&lt;p&gt;It is assigned to the anonymous struct&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;struct{
        char    1st_name[0x80];
        char    2nd_name[0x80];
 
    } name_tbl[] = {
        { &amp;quot;Isami&amp;quot;,   &amp;quot;Kondou&amp;quot; },
        { &amp;quot;Toshizo&amp;quot;, &amp;quot;Hijikata&amp;quot; },
        { &amp;quot;Kogorou&amp;quot;, &amp;quot;Kathura&amp;quot; },
    };
 
    for( i = 0; i &amp;lt; sizeof( name_tbl ); i ++ ){
        printf( &amp;quot;%s\n&amp;quot;, name_tbl[ i ].1st_name );
        printf( &amp;quot;%s\n&amp;quot;, name_tbl[ i ].2nd_name );
    } 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This code is very straightforward!&lt;/p&gt;

&lt;p&gt;This method is effective only when there is no necessity that you use 2 times and this structure.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>C,C&#43;&#43;,C&#43;&#43;/CLI sample program</title>
      <link>http://h-sao.com/blog/2014/01/31/cpp-sample-program/</link>
      <pubDate>Fri, 31 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://h-sao.com/blog/2014/01/31/cpp-sample-program/</guid>
      <description>

&lt;p&gt;Hi,&lt;/p&gt;

&lt;h2 id=&#34;c-program:71d03e7a0a57c60955d3d7e735a1eb01&#34;&gt;C program&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;c00.c
#include &amp;lt;stdio.h&amp;gt;

int main()
{
    printf(&amp;quot;This is a native C program.\n&amp;quot;);
    return 0;
} 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;compile&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; cl.exe c00.c
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;c-program-1:71d03e7a0a57c60955d3d7e735a1eb01&#34;&gt;C++ program&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;c01.cpp
#include &amp;lt;iostream&amp;gt;

int main()
{
    std::cout &amp;lt;&amp;lt; &amp;quot;This is a native C++ program.&amp;quot; &amp;lt;&amp;lt; std::endl;
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;compile&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; cl.exe /EHsc c01.cpp
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;c-cli-program:71d03e7a0a57c60955d3d7e735a1eb01&#34;&gt;C++/CLI program&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;c02.cpp
int main()
{
    System::Console::WriteLine(&amp;quot;This is a Visual C++ program.&amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;compile&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; cl.exe /clr c02.cpp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That is very interesting!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lightning Talk:How to program C&#43;&#43;/CX</title>
      <link>http://h-sao.com/blog/2014/01/29/how-to-program-cppcx/</link>
      <pubDate>Wed, 29 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://h-sao.com/blog/2014/01/29/how-to-program-cppcx/</guid>
      <description>&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;The other day, I spoke about C++/CX in Lightning Talk.&lt;/p&gt;

&lt;p&gt;Click here for article&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://jyurimaru.info/data/20140118MetroTokyo03/20140118_cppcx_LT_en.pptx&#34;&gt;PPTX-How to program c++/CX&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://jyurimaru.info/data/20140118MetroTokyo03/20140118_cppcx_LT_en.pdf&#34;&gt;PDF -How to program c++/CX&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Take care!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>